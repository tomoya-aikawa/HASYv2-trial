import os
import sys
from keras.applications.vgg16 import VGG16
from keras.models import Sequential, Model
from keras.layers import Input, Activation, Dropout, Flatten, Dense
from keras.layers import Convolution2D, MaxPooling2D, Conv2D
from keras.preprocessing import image
import numpy as np

if len(sys.argv) != 2:
    print("usage: python predict.py [filename]")
    sys.exit(1)

filename = sys.argv[1]
print('input:', filename)

result_dir = 'results'

img_height, img_width = 32, 32
channels = 3

classes = [
    '+',
    '-',
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    '<',
    '>',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    '[',
    '\\#',
    '\\$',
    '\\%',
    '\\&',
    '\\Downarrow',
    '\\Im',
    '\\L',
    '\\Leftrightarrow',
    '\\Longleftrightarrow',
    '\\Longrightarrow',
    '\\O',
    '\\Re',
    '\\S',
    '\\aa',
    '\\ae',
    '\\aleph',
    '\\alpha',
    '\\amalg',
    '\\angle',
    '\\approx',
    '\\ast',
    '\\astrosun',
    '\\asymp',
    '\\backsim',
    '\\backslash',
    '\\barwedge',
    '\\because',
    '\\beta',
    '\\between',
    '\\blacksquare',
    '\\blacktriangleright',
    '\\bot',
    '\\bowtie',
    '\\boxdot',
    '\\boxplus',
    '\\boxtimes',
    '\\bullet',
    '\\cap',
    '\\cdot',
    '\\celsius',
    '\\checked',
    '\\checkmark',
    '\\chi',
    '\\circ',
    '\\circlearrowleft',
    '\\circlearrowright',
    '\\circledR',
    '\\circledast',
    '\\circledcirc',
    '\\clubsuit',
    '\\cong',
    '\\coprod',
    '\\copyright',
    '\\cup',
    '\\curvearrowright',
    '\\dag',
    '\\dashv',
    '\\ddots',
    '\\degree',
    '\\delta',
    '\\diameter',
    '\\diamond',
    '\\diamondsuit',
    '\\div',
    '\\doteq',
    '\\dots',
    '\\dotsc',
    '\\ell',
    '\\emptyset',
    '\\epsilon',
    '\\equiv',
    '\\eta',
    '\\exists',
    '\\female',
    '\\fint',
    '\\flat',
    '\\forall',
    '\\frown',
    '\\fullmoon',
    '\\gamma',
    '\\geq',
    '\\geqslant',
    '\\gtrless',
    '\\gtrsim',
    '\\guillemotleft',
    '\\hbar',
    '\\heartsuit',
    '\\hookrightarrow',
    '\\iddots',
    '\\in',
    '\\infty',
    '\\int',
    '\\iota',
    '\\kappa',
    '\\lambda',
    '\\langle',
    '\\lceil',
    '\\leadsto',
    '\\leftarrow',
    '\\leftmoon',
    '\\leq',
    '\\leqslant',
    '\\lesssim',
    '\\lfloor',
    '\\lhd',
    '\\lightning',
    '\\llbracket',
    '\\longmapsto',
    '\\lozenge',
    '\\ltimes',
    '\\male',
    '\\mapsfrom',
    '\\mapsto',
    '\\mars',
    '\\mathbb{1}',
    '\\mathbb{H}',
    '\\mathbb{N}',
    '\\mathbb{Q}',
    '\\mathbb{R}',
    '\\mathbb{Z}',
    '\\mathcal{A}',
    '\\mathcal{B}',
    '\\mathcal{C}',
    '\\mathcal{D}',
    '\\mathcal{E}',
    '\\mathcal{F}',
    '\\mathcal{G}',
    '\\mathcal{H}',
    '\\mathcal{L}',
    '\\mathcal{M}',
    '\\mathcal{N}',
    '\\mathcal{O}',
    '\\mathcal{P}',
    '\\mathcal{R}',
    '\\mathcal{S}',
    '\\mathcal{T}',
    '\\mathcal{U}',
    '\\mathcal{X}',
    '\\mathcal{Z}',
    '\\mathds{1}',
    '\\mathds{C}',
    '\\mathds{E}',
    '\\mathds{N}',
    '\\mathds{P}',
    '\\mathds{Q}',
    '\\mathds{R}',
    '\\mathds{Z}',
    '\\mathfrak{A}',
    '\\mathfrak{M}',
    '\\mathfrak{S}',
    '\\mathfrak{X}',
    '\\mathscr{A}',
    '\\mathscr{C}',
    '\\mathscr{D}',
    '\\mathscr{E}',
    '\\mathscr{F}',
    '\\mathscr{H}',
    '\\mathscr{L}',
    '\\mathscr{P}',
    '\\mathscr{S}',
    '\\mathsection',
    '\\mid',
    '\\models',
    '\\mp',
    '\\mu',
    '\\multimap',
    '\\nRightarrow',
    '\\nabla',
    '\\nearrow',
    '\\neg',
    '\\neq',
    '\\nexists',
    '\\ni',
    '\\nmid',
    '\\not\\equiv',
    '\\notin',
    '\\nsubseteq',
    '\\nu',
    '\\nvDash',
    '\\odot',
    '\\ohm',
    '\\oiint',
    '\\oint',
    '\\omega',
    '\\ominus',
    '\\oplus',
    '\\otimes',
    '\\parallel',
    '\\parr',
    '\\partial',
    '\\perp',
    '\\phi',
    '\\pi',
    '\\pitchfork',
    '\\pm',
    '\\pounds',
    '\\prec',
    '\\preccurlyeq',
    '\\preceq',
    '\\prime',
    '\\prod',
    '\\propto',
    '\\psi',
    '\\rangle',
    '\\rceil',
    '\\rfloor',
    '\\rho',
    '\\rightarrow',
    '\\rightharpoonup',
    '\\rightleftarrows',
    '\\rightleftharpoons',
    '\\rightrightarrows',
    '\\rightsquigarrow',
    '\\rrbracket',
    '\\rtimes',
    '\\searrow',
    '\\setminus',
    '\\sharp',
    '\\shortrightarrow',
    '\\sigma',
    '\\sim',
    '\\simeq',
    '\\slash',
    '\\sphericalangle',
    '\\sqcap',
    '\\sqcup',
    '\\sqrt{}',
    '\\sqsubseteq',
    '\\square',
    '\\ss',
    '\\star',
    '\\subset',
    '\\subseteq',
    '\\subsetneq',
    '\\succ',
    '\\succeq',
    '\\sum',
    '\\sun',
    '\\supset',
    '\\supseteq',
    '\\tau',
    '\\therefore',
    '\\theta',
    '\\times',
    '\\top',
    '\\triangle',
    '\\triangledown',
    '\\triangleleft',
    '\\trianglelefteq',
    '\\triangleq',
    '\\triangleright',
    '\\twoheadrightarrow',
    '\\uparrow',
    '\\upharpoonright',
    '\\uplus',
    '\\varepsilon',
    '\\varkappa',
    '\\varnothing',
    '\\varoiint',
    '\\varphi',
    '\\varpi',
    '\\varpropto',
    '\\varrho',
    '\\varsubsetneq',
    '\\vartheta',
    '\\vartriangle',
    '\\vdash',
    '\\vdots',
    '\\vee',
    '\\venus',
    '\\wedge',
    '\\with',
    '\\wp',
    '\\wr',
    '\\xi',
    '\\zeta',
    '\\{',
    '\\|',
    '\\}',
    ']',
    '|',
]

model = Sequential()
model.add(Conv2D(32, (3, 3), input_shape=(32, 32, 3)))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2))

model.add(Conv2D(64, (3, 3)))
model.add(MaxPooling2D(pool_size=(2, 2), strides=2))

model.add(Flatten())
model.add(Dense(1024))
model.add(Activation('tanh'))
model.add(Dropout(0.5))
model.add(Dense(len(classes)))
model.add(Activation('softmax'))

model.load_weights(os.path.join(result_dir, 'weights.h5'))
model.compile(loss='categorical_crossentropy',
              optimizer='adam',
              metrics=['accuracy'])

img = image.load_img(filename, target_size=(img_height, img_width))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)

x = x / 255.0

pred = model.predict(x)[0]


top = 5
top_indices = pred.argsort()[-top:][::-1]
result = [(classes[i], pred[i]) for i in top_indices]
for x in result:
    print(x)
